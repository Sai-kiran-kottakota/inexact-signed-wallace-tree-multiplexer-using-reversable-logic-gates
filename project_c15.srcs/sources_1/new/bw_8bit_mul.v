`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 03/14/2024 12:00:18 PM
// Design Name: 
// Module Name: bw_8bit_mul
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module bw_8bit_mul(input [7:0]a,b,
                   output [15:0]y
						 
    );
    wire cout;
wire [42:0]c;
wire [92:1]w;
wire [7:0]x;
wire [63:0]d,e;	 
PG n1(a[0],b[0],1'b0,d[0],e[0],y[0]);  //partial products
PG n2(a[1],b[0],1'b0,d[1],e[1],w[1]);
PG n3(a[2],b[0],1'b0,d[2],e[2],w[2]);
PG n4(a[3],b[0],1'b0,d[3],e[3],w[3]);
PG n5(a[4],b[0],1'b0,d[4],e[4],w[4]);
PG n6(a[5],b[0],1'b0,d[5],e[5],w[5]);
PG n7(a[6],b[0],1'b0,d[6],e[6],w[6]);
PG n8(a[7],b[0],1'b0,d[7],e[7],w[7]);

PG n9(a[0],b[1],1'b0,d[8],e[8],w[8]);  //partial products
PG n10(a[1],b[1],1'b0,d[9],e[9],w[9]);
PG n11(a[2],b[1],1'b0,d[10],e[10],w[10]);
PG n12(a[3],b[1],1'b0,d[11],e[11],w[11]);
PG n13(a[4],b[1],1'b0,d[12],e[12],w[12]);
PG n14(a[5],b[1],1'b0,d[13],e[13],w[13]);
PG n15(a[6],b[1],1'b0,d[14],e[14],w[14]);
PG n16(a[7],b[1],1'b0,d[15],e[15],w[15]);

PG n17(a[0],b[2],1'b0,d[16],e[16],w[16]);  //partial products
PG n18(a[1],b[2],1'b0,d[17],e[17],w[17]);
PG n19(a[2],b[2],1'b0,d[18],e[18],w[18]);
PG n20(a[3],b[2],1'b0,d[19],e[19],w[19]);
PG n21(a[4],b[2],1'b0,d[20],e[20],w[20]);
PG n22(a[5],b[2],1'b0,d[21],e[21],w[21]);
PG n23(a[6],b[2],1'b0,d[22],e[22],w[22]);
PG n24(a[7],b[2],1'b0,d[23],e[23],w[23]);

PG n25(a[0],b[3],1'b0,d[24],e[24],w[24]);  //partial products
PG n26(a[1],b[3],1'b0,d[25],e[25],w[25]);
PG n27(a[2],b[3],1'b0,d[26],e[26],w[26]);
PG n28(a[3],b[3],1'b0,d[27],e[27],w[27]);
PG n29(a[4],b[3],1'b0,d[28],e[28],w[28]);
PG n30(a[5],b[3],1'b0,d[29],e[29],w[29]);
PG n31(a[6],b[3],1'b0,d[30],e[30],w[30]);
PG n32(a[7],b[3],1'b0,d[31],e[31],w[31]);

PG n33(a[0],b[4],1'b0,d[32],e[32],w[32]);  //partial products
PG n34(a[1],b[4],1'b0,d[33],e[33],w[33]);
PG n35(a[2],b[4],1'b0,d[34],e[34],w[34]);
PG n36(a[3],b[4],1'b0,d[35],e[35],w[35]);
PG n37(a[4],b[4],1'b0,d[36],e[36],w[36]);
PG n38(a[5],b[4],1'b0,d[37],e[37],w[37]);
PG n39(a[6],b[4],1'b0,d[38],e[38],w[38]);
PG n40(a[7],b[4],1'b0,d[39],e[39],w[39]);


PG n41(a[0],b[5],1'b0,d[40],e[40],w[40]);  //partial products
PG n42(a[1],b[5],1'b0,d[41],e[41],w[41]);
PG n43(a[2],b[5],1'b0,d[42],e[42],w[42]);
PG n44(a[3],b[5],1'b0,d[43],e[43],w[43]);
PG n45(a[4],b[5],1'b0,d[44],e[44],w[44]);
PG n46(a[5],b[5],1'b0,d[45],e[45],w[45]);
PG n47(a[6],b[5],1'b0,d[46],e[46],w[46]);
PG n48(a[7],b[5],1'b0,d[47],e[47],w[47]);

PG n49(a[0],b[6],1'b0,d[48],e[48],w[48]);  //partial products
PG n50(a[1],b[6],1'b0,d[49],e[49],w[49]);
PG n51(a[2],b[6],1'b0,d[50],e[50],w[50]);
PG n52(a[3],b[6],1'b0,d[51],e[51],w[51]);
PG n53(a[4],b[6],1'b0,d[52],e[52],w[52]);
PG n54(a[5],b[6],1'b0,d[53],e[53],w[53]);
PG n55(a[6],b[6],1'b0,d[54],e[54],w[54]);
PG n56(a[7],b[6],1'b0,d[55],e[55],w[55]);


PG n57(a[0],b[7],1'b0,d[56],e[56],w[56]);  //partial products
PG n58(a[1],b[7],1'b0,d[57],e[57],w[57]);
PG n59(a[2],b[7],1'b0,d[58],e[58],w[58]);
PG n60(a[3],b[7],1'b0,d[59],e[59],w[59]);
PG n61(a[4],b[7],1'b0,d[60],e[60],w[60]);
PG n62(a[5],b[7],1'b0,d[61],e[61],w[61]);
PG n63(a[6],b[7],1'b0,d[62],e[62],w[62]);
PG n64(a[7],b[7],1'b0,d[63],e[63],w[63]);


half n65(w[1],w[8],y[1],c[0]); //stage 1
TSG_FA n66(w[2],w[9],w[16],w[64],c[1]);
inexact_comp n67({w[3],w[10],w[17],w[24]},w[65],c[2]);
inexact_comp n68({w[4],w[11],w[18],w[25]},w[66],c[3]);
inexact_comp n69({w[5],w[12],w[19],w[26]},w[67],c[4]);
inexact_comp n70({w[6],w[13],w[20],w[27]},w[68],c[5]);
inexact_comp n71({w[7],w[14],w[21],w[28]},w[69],c[6]);
exact_comp n72({1'b0,w[15],w[22],w[29]},1'b0,w[70],c[7],x[0]);
exact_comp n73({w[23],w[30],w[37],w[44]},x[0],w[71],c[8],x[1]);
exact_comp n74({w[31],w[38],w[45],w[52]},x[1],w[72],c[9],x[2]);
exact_comp n75({w[39],w[46],w[53],w[60]},x[2],w[73],c[10],x[3]);
TSG_FA n76(w[47],w[54],w[61],w[74],c[11]);
half n77(w[55],w[62],w[75],c[12]);

half n78(w[33],w[40],w[76],c[13]);
TSG_FA n79(w[34],w[41],w[48],w[77],c[14]);
inexact_comp n80({w[35],w[42],w[49],w[56]},w[78],c[15]);
exact_comp n81({w[36],w[43],w[50],w[57]},1'b0,w[79],x[4],c[16]);
half n82(w[51],w[58],w[80],c[17]);

half n83(w[64],c[0],y[2],c[18]);// stage 2
half n84(w[65],c[1],w[81],c[19]);
TSG_FA n85(w[66],w[32],c[2],w[82],c[20]);
TSG_FA n86(w[67],c[3],w[76],w[83],c[21]);
inexact_comp n87({w[68],c[4],w[77],c[13]},w[84],c[22]);
inexact_comp n88({w[69],c[5],w[78],c[14]},w[85],c[23]);
exact_comp n89({w[70],c[6],w[79],c[15]},1'b0,w[86],c[24],x[5]);
exact_comp n90({w[71],c[7],w[80],c[16]},x[5],w[87],c[25],x[6]);
exact_comp n91({w[72],c[8],c[17],w[59]},x[6],w[88],c[26],x[7]);
half n92(w[73],c[9],w[89],c[27]);
half n93(w[74],c[10],w[90],c[28]);
half n94(w[75],c[11],w[91],c[29]);
half n95(w[63],c[12],w[92],c[30]);//stage  2 end

half n96(w[81],c[18],y[3],c[31]);//fianl stage
TSG_FA n97(w[82],c[19],c[31],y[4],c[32]);
TSG_FA n98(w[83],c[20],c[32],y[5],c[33]);
TSG_FA n99(w[84],c[21],c[33],y[6],c[34]);
TSG_FA n100(w[85],c[22],c[34],y[7],c[35]);
TSG_FA n101(w[86],c[23],c[35],y[8],c[36]);
TSG_FA n102(w[87],c[24],c[36],y[9],c[37]);
TSG_FA n103(w[88],c[25],c[37],y[10],c[38]);
TSG_FA n104(w[89],c[26],c[38],y[11],c[39]);
TSG_FA n105(w[90],c[27],c[39],y[12],c[40]);
TSG_FA n106(w[91],c[28],c[40],y[13],c[41]);
TSG_FA n107(w[92],c[29],c[41],y[14],c[42]);
TSG_FA n108(1'b0,c[30],c[42],y[15],cout);


endmodule
